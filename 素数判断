<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>素数プログラム</title>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            font-family: Arial, sans-serif;
        }
        .container {
            text-align: center;
        }
        .title {
            position: fixed;
            top: 10px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 40px;
            color: #333;
            margin: 0;
        }
        .selected-mode {
            font-size: 50px;
            font-weight: bold;
            color: #333;
            margin-bottom: 20px;
        }
        #primeGameContainer {
            position: fixed;
            top: 150px;
            left: 50%;
            transform: translateX(-50%);
            text-align: center;
        }
        #primeGameTitle {
            font-size: 30px;
            font-weight: bold;
            margin-bottom: 20px;
            color: #333;
        }
        #randomNumberDisplay {
            font-size: 28px;
            font-weight: bold;
            margin-bottom: 20px;
            color: #00ff59;
        }
        #primeButtons button {
            font-size: 18px;
            padding: 10px 20px;
            margin: 10px;
            background-color: #007BFF;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        #primeButtons button:hover {
            background-color: #0056b3;
        }
        #backButton {
            position: fixed;
            bottom: 20px;
            right: 20px;
            font-size: 20px;
            padding: 10px 20px;
            background-color: #007BFF;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        #backButton:hover {
            background-color: #0056b3;
        }
        #primeAnswer {
            font-size: 28px;
            font-weight: bold;
            color: #333;
            margin-top: 20px;
        }
        #scoreTableContainer {
            display: none;
            position: fixed;
            top: 10%;
            right: 10px;
            border: 1px solid #333;
            border-radius: 5px;
            padding: 10px;
            background-color: #f9f9f9;
        }
        #scoreTable {
            border-collapse: collapse;
            width: 100%;
        }
        #scoreTable th, #scoreTable td {
            border: 1px solid #333;
            padding: 5px;
            text-align: center;
        }
        #streakCount {
            font-size: 18px;
            font-weight: bold;
            margin-top: 10px;
            color: #007BFF;
        }
    </style>
    <script>
        let streak = 0;
        let attempts = 0;
        let usedNumbers = [];

        function isPrime(num) {
            if (num <= 1) return false;
            for (let i = 2; i <= Math.sqrt(num); i++) {
                if (num % i === 0) return false;
            }
            return true;
        }

        function startGame() {
            hideButtons();
            document.getElementById('scoreTableContainer').style.display = 'block';
            document.getElementById('modeDisplay').textContent = '素数判断ゲーム - カウントダウン開始';
            countdownToStart(3);
        }

        function countdownToStart(seconds) {
            document.getElementById('modeDisplay').textContent = '素数判断ゲーム';
            if (seconds > 0) {
                document.getElementById('modeDisplay').textContent += ` - ${seconds}...`;
                setTimeout(() => countdownToStart(seconds - 1), 1000);
            } else {
                document.getElementById('modeDisplay').textContent = 'ゲームスタート！';
                setTimeout(() => {
                    document.getElementById('modeDisplay').textContent = '';
                    document.getElementById('primeGameContainer').style.display = 'block';
                    generateRandomNumber();
                }, 1000);
            }
        }

        function hideButtons() {
            document.getElementById('startButtons').style.display = 'none';
        }

        function backToModeSelection() {
            document.getElementById('Check').style.display = 'none';
            document.getElementById('primeGameContainer').style.display = 'none';
            document.getElementById('startButtons').style.display = 'block';
            document.getElementById('modeDisplay').textContent = 'モードを選んでください';
            document.getElementById('scoreTableContainer').style.display = 'none';
            
            const tableBody = document.querySelector('#scoreTable tbody');
            tableBody.innerHTML = '';
            streak = 0;
            attempts = 0;
            usedNumbers = [];
            document.getElementById('streakCount').textContent = '連続正解数: 0';
            
            document.getElementById('numberInput').value = '';
            document.getElementById('result').textContent = '';
            document.getElementById('factors').textContent = '';
        }

        function generateRandomNumber() {
            const rangeOffset = Math.floor(attempts / 10) * 100;
            const rangeStart = 0 + rangeOffset;
            const rangeEnd = 99 + rangeOffset;

            const candidates = [];
            for (let i = rangeStart; i <= rangeEnd; i++) {
                if (i <= 2 || i % 2 !== 0) candidates.push(i);
            }

            let randomNumber;
            do {
                const randomIndex = Math.floor(Math.random() * candidates.length);
                randomNumber = candidates[randomIndex];
            } while (usedNumbers.includes(randomNumber));

            document.getElementById('randomNumberDisplay').textContent = `数字: ${randomNumber}`;
            usedNumbers.push(randomNumber);

            if (usedNumbers.length >= candidates.length) {
                alert('すべての数字が出尽くしました！範囲をリセットします。');
                usedNumbers = [];
            }
        }

        function answerPrime(isPrimeAnswer) {
            const randomNumber = parseInt(document.getElementById('randomNumberDisplay').textContent.replace('数字: ', ''), 10);
            const correctAnswer = isPrime(randomNumber);
            const userAnswer = isPrimeAnswer;
            const resultSymbol = correctAnswer === userAnswer ? '○' : '×';
            const resultText = correctAnswer === userAnswer ? '正解です！' : `間違いです。${randomNumber}は${correctAnswer ? '素数' : '素数ではない'}です。`;

            document.getElementById('primeAnswer').textContent = resultText;

            attempts++;
            if (correctAnswer === userAnswer) {
                streak++;
            } else {
                streak = 0;
            }

            const tableBody = document.querySelector('#scoreTable tbody');
            const newRow = document.createElement('tr');
            newRow.innerHTML = `
                <td>${attempts}</td>
                <td>${randomNumber}</td>
                <td>${correctAnswer ? '素数' : '素数ではない'}</td>
                <td>${resultSymbol}</td>
            `;
            tableBody.appendChild(newRow);

            if (tableBody.rows.length > 10) {
                tableBody.deleteRow(0);
            }

            document.getElementById('streakCount').textContent = `連続正解数: ${streak}`;

            setTimeout(() => {
                document.getElementById('primeAnswer').textContent = '';
            }, 1000);

            setTimeout(generateRandomNumber, 1000);
        }

        function showPrimeCheck() {
            hideButtons();
            document.getElementById('modeDisplay').textContent = '素数チェックモード';
            document.getElementById('Check').style.display = 'block';
        }
        
        function primeFactorization(num) {
          if(num <= 1) return [];
          const factors = [];
          let divisor = 2;
          while(num >= divisor * divisor) {
            if(num % divisor === 0) {
              factors.push(divisor);
              num /= divisor;
            } else {
              divisor++;
            }
          }
          factors.push(num);
          return factors;
        }

        function checkPrime() {
            const input = document.getElementById('numberInput').value;
            const number = parseInt(input, 10);
            if (isNaN(number)) {
                document.getElementById('result').textContent = '有効な数字を入力してください。';
                return;
            }
            const isPrimeResult = isPrime(number);
            const resultText = isPrimeResult ? `${number}は素数です。` : `${number}は素数ではありません。`;
            document.getElementById('result').textContent = resultText;
            
            if(!isPrimeResult && number > 1) {
              const factors = primeFactorization(number);
              const factorsText = `素因数分解：<span style="color: red;">${factors.join(' × ')}</span>`;
              document.getElementById('factors').innerHTML = factorsText;
            } else {
              document.getElementById('factors').textContent = '';
            }
        }
    </script>
</head>
<body>
    <div class="container">
        <h1 class="title"><div style="background-color: yellow;">素数プログラム</div></h1>
        <p id="modeDisplay" class="selected-mode">モードを選んでください</p>
        <div id="startButtons">
            <button onclick="showPrimeCheck()" style="font-size: 35px;">素数チェック</button>
            <button onclick="startGame()" style="font-size: 35px;">素数判断ゲーム</button>
        </div>
        <div id="Check" style="display:none;">
            <h2>素数チェック</h2>
            <label for="numberInput">数字を入力してください:</label>
            <input type="number" id="numberInput" required>
            <button onclick="checkPrime()">判定</button>
            <p id="result"></p>
            <p id="factors"></p>
        </div>

        <div id="primeGameContainer" style="display: none;">
            <div id="primeGameTitle">素数判断ゲーム</div>
            <div id="randomNumberDisplay"></div>
            <div id="primeButtons">
                <button onclick="answerPrime(true)">素数</button>
                <button onclick="answerPrime(false)">素数ではない</button>
            </div>
            <p id="primeAnswer"></p>
        </div>
        <button id="backButton" onclick="backToModeSelection()">モード選択に戻る</button>
    </div>
    
    <div id="scoreTableContainer">
        <h2>連続正解数</h2>
        <table id="scoreTable">
            <thead>
                <tr>
                    <th>試行回数</th>
                    <th>数字</th>
                    <th>素数か否か</th>
                    <th>正誤</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
        <p id="streakCount">連続正解数: 0</p>
    </div>
</body>
</html>
